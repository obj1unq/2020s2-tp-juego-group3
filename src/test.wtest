import wollok.game.*
import configuraciones.*
import entrenadores.*
import wollokmones.*
import ataques.*


describe "Test Entrenador se mueve en Pantalla Principal" {
	fixture {
		game.clear()
		game.width(12)
		game.height(12)
		pantallaPrincipal.iniciar()	
	}
	test "Esta en posicion de inicio de partida" {
		assert.equals(jugador.position(), game.center())
	}
	test "Moverse a la derecha no se puede porque esta la casa que es posicion prohibida" {
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().right(1))
		assert.that(jugador.esPosicionProhibida(game.center().right(1)))
		assert.equals(jugador.position(), game.at(6,6))
	}
	test "Moverse a la izquierda" {
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().left(1))
		assert.equals(jugador.position(), game.at(5,6))
	}
	test "Moverse hacia arriba" {
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().up(1))
		assert.equals(jugador.position(), game.at(6,7))
	}
	test "Moverse hacia abajo" {
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().down(1))
		assert.equals(jugador.position(), game.at(6,5))
	}
	test "Colisiona con el Entrenador rival Fercho" {
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().down(1))
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().left(2))
		assert.equals(game.uniqueCollider(jugador), fercho)
	}
	test "Colisiona con el Entrenador rival Juan" {
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().down(4))
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().right(3))
		assert.equals(game.uniqueCollider(jugador), juan)
	}
	test "Colisiona con el Entrenador rival Ivi" {
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().up(4))
		jugador.irASiSeMantieneEnLaPantalla(jugador.position().right(1))
		assert.equals(game.uniqueCollider(jugador), ivi)
	}
}

describe "Test Mana de Wollokmon" {
	fixture {
		game.clear()
		game.width(12)
		game.height(12)
		ivi.iniciarPelea()
	}
	test "Mana no se consume cuando se usa ataque base y esta full" {
		assert.equals(jugador.wollokmon().manaActual(), 3)
		pantallaDeBatalla.turno(0)
		assert.equals(jugador.wollokmon().manaActual(), 3)
	}
	test "Mana aumenta cuando se usa ataque base y esta vacio" {
		jugador.wollokmon().manaActual(0)
		assert.equals(jugador.wollokmon().manaActual(), 0)
		pantallaDeBatalla.turno(0)
		assert.equals(jugador.wollokmon().manaActual(), 1)
	}
	test "Mana no se consume cuando se usa defensa y esta full" {
		assert.equals(jugador.wollokmon().manaActual(), 3)
		pantallaDeBatalla.turno(1)
		assert.equals(jugador.wollokmon().manaActual(), 3)
	}
	test "Mana aumenta cuando se usa defensa y esta vacio" {
		jugador.wollokmon().manaActual(0)
		assert.equals(jugador.wollokmon().manaActual(), 0)
		pantallaDeBatalla.turno(1)
		assert.equals(jugador.wollokmon().manaActual(), 1)
	}
	test "Mana se consume cuando se usa ataque especial y esta full" {
		assert.equals(jugador.wollokmon().manaActual(), 3)
		pantallaDeBatalla.turno(2)
		assert.equals(jugador.wollokmon().manaActual(), 2)
	}
	test "Mana no alcanza cuando se usa ataque especial y esta vacio" {
		jugador.wollokmon().manaActual(0)
		assert.equals(jugador.wollokmon().manaActual(), 0)
		assert.throwsExceptionWithMessage("No tengo mana para especial", { pantallaDeBatalla.turno(2) })
	}
}